"use strict";Object.defineProperty(exports, "__esModule", { value: true });var _jsxFileName = "/home/ben/Documents/UniversityYear2Work/coursework/webapp/client/src/SearchBar/SearchBar.js";var _react = require("react");var _react2 = _interopRequireDefault(_react);
var _edamam = require("../BackendCalls/edamam");var _edamam2 = _interopRequireDefault(_edamam);
require("../App.css");function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _asyncToGenerator(fn) {return function () {var gen = fn.apply(this, arguments);return new Promise(function (resolve, reject) {function step(key, arg) {try {var info = gen[key](arg);var value = info.value;} catch (error) {reject(error);return;}if (info.done) {resolve(value);} else {return Promise.resolve(value).then(function (value) {step("next", value);}, function (err) {step("throw", err);});}}return step("next");});};}

class SearchBar extends _react.Component {
    constructor(props) {
        super(props);

        this.state = { term: "Chicken" };
        this.handleChange = this.handleChange.bind(this);
        this.handleSubmit = this.handleSubmit.bind(this);
    }

    handleChange(term) {
        this.setState({ term });
    }

    getEdamanRecipe() {var _this = this;return _asyncToGenerator(function* () {
            console.log("HANDLING SUBMIT");
            let submitResults = _this.props.onClick;
            let data = yield _edamam2.default.getRecipe(_this.state.term);
            submitResults("SearchResults", data);})();
    }

    handleSubmit(event) {
        this.getEdamanRecipe();
        event.preventDefault();
    }

    render() {
        return (
            _react2.default.createElement("form", { className: "search-bar", onSubmit: this.handleSubmit, __source: { fileName: _jsxFileName, lineNumber: 32 }, __self: this },
                _react2.default.createElement("label", { __source: { fileName: _jsxFileName, lineNumber: 33 }, __self: this }, "Search:",

                    _react2.default.createElement("input", {
                        type: "text",
                        value: this.state.term,
                        onChange: event => this.handleChange(event.target.value), __source: { fileName: _jsxFileName, lineNumber: 35 }, __self: this })),


                _react2.default.createElement("input", { type: "submit", value: "Submit", __source: { fileName: _jsxFileName, lineNumber: 41 }, __self: this })));



    }}

/*
       
       */exports.default =

SearchBar;